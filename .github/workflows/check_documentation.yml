name: Build and Test Documentation

on:
  push:
    branches: master
  pull_request:
    branches: master

permissions:
  contents: read

jobs:
  documentationjob:

    name: Build and Test Documentation
    runs-on: ubuntu-20.04

    env:
      PYTHON_BINDING_VERSION: "3.8"

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
      with:
        egress-policy: audit

    - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      with:
        fetch-depth: 0
        submodules: true

    - name: Install Dependencies
      run: |
        export BUILD_DOCU=true
        bash .github/workflows/install_dependencies.sh

    - name: Build Documentation and Test
      run: |
        GTEST_OUTPUT="xml:test_results"
        colcon build --event-handlers console_direct+ --executor sequential --packages-up-to ad_map_access ad_physics --cmake-args -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DBUILD_COVERAGE=ON -DBUILD_APIDOC=ON
        colcon test --event-handlers console_direct+ --packages-select ad_map_access ad_physics
        colcon test-result

    - name: Code Coverage
      run: |
        bash .github/workflows/code_coverage.sh

    - name: Upload coverage as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage_report
        path: ./coverage
        if-no-files-found: error
        overwrite: true

    - name: Documentation Deployment (Test)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ ${{ github.event_name }} != 'pull_request' ]; then bash .github/workflows/deploy_documentation.sh true; else bash .github/workflows/deploy_documentation.sh false; fi
